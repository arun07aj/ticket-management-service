name: Deploy to AWS EC2

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Prepare SSH key
        run: |
          echo "${{ secrets.AWS_EC2_KEY }}" | tr -d '\r' | base64 --decode > private_key.pem && chmod 600 private_key.pem

      - name: Test SSH connection
        run: |
          ssh -o StrictHostKeyChecking=no -i private_key.pem ${{ secrets.AWS_EC2_USER }}@${{ secrets.AWS_EC2_HOST }} 'echo "SSH connection successful"'

      - name: SSH into EC2, build Docker image from cloned repo, and push image to Docker Hub
        run: |
          ssh -o StrictHostKeyChecking=no -i private_key.pem ${{ secrets.AWS_EC2_USER }}@${{ secrets.AWS_EC2_HOST }} '
          # Clone or pull the latest code from the repository
          if [ ! -d "/home/ubuntu/tmsconf/ticket-management-service" ]; then
              git clone https://github.com/arun07aj/ticket-management-service.git /home/ubuntu/tmsconf
            else
              cd /home/ubuntu/tmsconf && git pull origin main
            fi
          
          cd /home/ubuntu/tmsconf/ &&
          docker buildx version &&
          DOCKER_BUILDKIT=1 docker build \
           --secret id=application-prod.properties,src=/home/ubuntu/tmsconf/application-prod.properties \
           --secret id=prod_env_react,src=/home/ubuntu/tmsconf/.env.prod \
           -t ${{ secrets.DOCKER_USERNAME }}/tmsapp \
           -f /home/ubuntu/tmsconf/ticket-management-service/Dockerfile /home/ubuntu/tmsconf/ticket-management-service &&
          
          # Login to Docker Hub and push the image
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }} &&
          docker push ${{ secrets.DOCKER_USERNAME }}/tmsapp
        
          # Deploy app using Docker Compose
          cd /home/ubuntu/tmsconf/ &&
          docker-compose down &&
          docker-compose up -d
          '