name: Deploy to AWS EC2

on:
  push:
    branches:
      - test

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/tmsapp -f Dockerfile .
          docker push ${{ secrets.DOCKER_USERNAME }}/tmsapp

      - name: Prepare SSH key
        run: |
          echo "${{ secrets.AWS_EC2_KEY }}" | tr -d '\r' | base64 --decode > private_key.pem && chmod 600 private_key.pem

      - name: Test SSH connection
        run: |
          ssh -o StrictHostKeyChecking=no -i private_key.pem ${{ secrets.AWS_EC2_USER }}@${{ secrets.AWS_EC2_HOST }} 'echo "SSH connection successful"'

      - name: SSH into EC2, pull latest Docker image, and restart container
        run: |
          ssh -o StrictHostKeyChecking=no -i private_key.pem ${{ secrets.AWS_EC2_USER }}@${{ secrets.AWS_EC2_HOST }} << 'EOF'
            
            cd /home/ubuntu/ || exit
          
            # Pull the latest Docker image from Docker Hub
            docker pull ${{ secrets.DOCKER_USERNAME }}/tmsapp:latest
          
            # Stop and remove the existing tmsapp container 
            docker ps -a -q --filter "name=tmsapp" | grep -q . && docker rm -f tmsapp || echo "No container to stop/remove"
          
            # In docker -v loc1:loc2 syntax, loc2 cannot be given as a git action var
            # Workaround is to copy the git action var to a local shell var
            export TMS_KEYSTORE_PATH=${{ secrets.SSL_KEYSTORE_PATH }}
          
            # Run the new container (8082 of ec2 to 8080 of img) 
            docker run -d --name tmsapp -p 8082:8080 \
              -v ${{ secrets.SSL_KEYSTORE_PATH }}:${TMS_KEYSTORE_PATH} \
              -e SSL_KEYSTORE_PATH=${{ secrets.SSL_KEYSTORE_PATH }} \
              -e SSL_KEYSTORE_PSWD=${{ secrets.SSL_KEYSTORE_PSWD }} \
              -e SSL_KEYSTORE_TYPE=${{ secrets.SSL_KEYSTORE_TYPE }} \
              -e JWT_SECRET=${{ secrets.JWT_SECRET }} \
              -e JWT_VALIDITY=${{ secrets.JWT_VALIDITY }} \
              -e DB_URL=${{ secrets.DB_URL }} \
              -e DB_USERNAME=${{ secrets.DB_USERNAME }} \
              -e DB_PSWD=${{ secrets.DB_PSWD }} \
              ${{ secrets.DOCKER_USERNAME }}/tmsapp:latest
          EOF